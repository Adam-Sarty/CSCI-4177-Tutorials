{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarty/Desktop/tutorial3/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useContentLoader } from '../js/useContentLoader';\n\n/* ------------------------------------------------------\n *  Author: Adam Sarty\n *  Student ID: B00794681\n *  T3 - CSCI4177\n * ------------------------------------------------------\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n  useContentLoader();\n  const navigate = useNavigate();\n\n  // State management for form data and validation errors\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  // State to manage validation errors\n  const [errors, setErrors] = useState({});\n  // State to control the visibility of password requirements\n  const [showRequirements, setShowRequirements] = useState(false);\n\n  // Function to handle changes in form inputs\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // Updating form data state on input change\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n\n    // Conditionally showing password requirements based on the validation\n    if (name === \"password\") {\n      if (!validatePassword(value)) {\n        setShowRequirements(true);\n      } else {\n        setShowRequirements(false);\n      }\n    }\n  };\n\n  // Function to validate form data\n  const validateForm = () => {\n    let tempErrors = {};\n    let isValid = true;\n\n    // Validate Password\n    if (!validatePassword(formData.password)) {\n      isValid = false; // Mark form as invalid without setting a specific error message\n    }\n\n    // Validate Confirm Password\n    if (formData.confirmPassword !== formData.password) {\n      isValid = false;\n      tempErrors.confirmPassword = \"Passwords do not match.\";\n    }\n\n    // Update the errors state with any validation errors\n    setErrors(tempErrors);\n    return isValid;\n  };\n\n  // Function to validate password based on specific criteria\n  const validatePassword = password => {\n    // Ensures password is at least 8 characters long\n    return password.match(/^[\\w!@#$%^&*]{8,}$/);\n  };\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevents the default form submit action\n    if (validateForm()) {\n      navigate('/profile'); // Navigate to profile page upon successful validation\n    }\n  };\n\n  // JSX for rendering the registration form\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          id: \"firstName\",\n          placeholder: \"John\",\n          onChange: handleChange,\n          value: formData.firstName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          id: \"lastName\",\n          placeholder: \"Smith\",\n          onChange: handleChange,\n          value: formData.lastName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"johnsmith@dal.ca\",\n          onChange: handleChange,\n          value: formData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"requirements\",\n          style: {\n            display: showRequirements ? 'block' : 'none'\n          },\n          children: \"Password must be at least 8 characters long.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChange,\n          value: formData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          id: \"confirmPassword\",\n          placeholder: \"Password\",\n          onChange: handleChange,\n          value: formData.confirmPassword,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Returning Explorer? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"h4PnH5u22n/ICkpkiIQMu5400+Y=\", false, function () {\n  return [useContentLoader, useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","useContentLoader","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","firstName","lastName","email","password","confirmPassword","errors","setErrors","showRequirements","setShowRequirements","handleChange","e","name","value","target","prevState","validatePassword","validateForm","tempErrors","isValid","match","handleSubmit","preventDefault","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","onChange","required","style","display","color","href","_c","$RefreshReg$"],"sources":["/Users/adamsarty/Desktop/tutorial3/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useContentLoader } from '../js/useContentLoader';\n\n/* ------------------------------------------------------\n *  Author: Adam Sarty\n *  Student ID: B00794681\n *  T3 - CSCI4177\n * ------------------------------------------------------\n */\n\nexport const Register = () => {\n    useContentLoader();\n\n    const navigate = useNavigate();\n\n    // State management for form data and validation errors\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    // State to manage validation errors\n    const [errors, setErrors] = useState({});\n    // State to control the visibility of password requirements\n    const [showRequirements, setShowRequirements] = useState(false);\n\n    // Function to handle changes in form inputs\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        // Updating form data state on input change\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n        \n        // Conditionally showing password requirements based on the validation\n        if (name === \"password\") {\n            if (!validatePassword(value)) {\n                setShowRequirements(true);\n            } else {\n                setShowRequirements(false);\n            }\n        }\n    };\n\n    // Function to validate form data\n    const validateForm = () => {\n        let tempErrors = {};\n        let isValid = true;\n\n        // Validate Password\n        if (!validatePassword(formData.password)) {\n            isValid = false; // Mark form as invalid without setting a specific error message\n        }\n\n        // Validate Confirm Password\n        if (formData.confirmPassword !== formData.password) {\n            isValid = false;\n            tempErrors.confirmPassword = \"Passwords do not match.\";\n        }\n\n        // Update the errors state with any validation errors\n        setErrors(tempErrors);\n        return isValid;\n    };\n\n    // Function to validate password based on specific criteria\n    const validatePassword = (password) => {\n        // Ensures password is at least 8 characters long\n        return password.match(/^[\\w!@#$%^&*]{8,}$/);\n    };\n\n    // Function to handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevents the default form submit action\n        if (validateForm()) {\n            navigate('/profile'); // Navigate to profile page upon successful validation\n        }\n    };\n\n    // JSX for rendering the registration form\n    return (\n        <div className=\"container\">\n            <div className=\"content\">\n                <form onSubmit={handleSubmit}>\n                    <h1>Create Account</h1>\n                    {/* Input fields for registration form with inline validation feedback */}\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <br/>\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"John\" onChange={handleChange} value={formData.firstName} required/>\n                    <br/>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Smith\" onChange={handleChange} value={formData.lastName} required/>\n                    <br/>\n                    <label htmlFor=\"email\">Email</label>\n                    <br/>\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"johnsmith@dal.ca\" onChange={handleChange} value={formData.email} required/>\n                    <br/>\n                    <label htmlFor=\"password\">Password</label>\n                    <br/>\n                    {/* Dynamically displayed password requirements */}\n                    <div className=\"requirements\" style={{display: showRequirements ? 'block' : 'none'}}>\n                        Password must be at least 8 characters long.\n                    </div>\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={formData.password} required/>\n                    <br/>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <br/>\n                    <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Password\" onChange={handleChange} value={formData.confirmPassword} required/>\n                    <br/>\n                    {/* Error message for confirm password validation */}\n                    {errors.confirmPassword && <div style={{color: 'red'}}>{errors.confirmPassword}</div>}\n                    <input type=\"submit\" value=\"Register\"/>\n                    <p>Returning Explorer? <a href=\"#\">Login</a></p>\n                </form>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}