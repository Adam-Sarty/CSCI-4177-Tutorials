{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useContentLoader}from'../js/useContentLoader';/* ------------------------------------------------------\n *  Author: Adam Sarty\n *  Student ID: B00794681\n *  T3 - CSCI4177\n * ------------------------------------------------------\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const Register=()=>{useContentLoader();const navigate=useNavigate();// State management for form data and validation errors\nconst[formData,setFormData]=useState({firstName:'',lastName:'',email:'',password:'',confirmPassword:''});// State to manage validation errors\nconst[errors,setErrors]=useState({});// State to control the visibility of password requirements\nconst[showRequirements,setShowRequirements]=useState(false);// Function to handle changes in form inputs\nconst handleChange=e=>{const{name,value}=e.target;// Updating form data state on input change\nsetFormData(prevState=>({...prevState,[name]:value}));// Conditionally showing password requirements based on the validation\nif(name===\"password\"){if(!validatePassword(value)){setShowRequirements(true);}else{setShowRequirements(false);}}};// Function to validate form data\nconst validateForm=()=>{let tempErrors={};let isValid=true;// Validate Password\nif(!validatePassword(formData.password)){isValid=false;// Mark form as invalid without setting a specific error message\n}// Validate Confirm Password\nif(formData.confirmPassword!==formData.password){isValid=false;tempErrors.confirmPassword=\"Passwords do not match.\";}// Update the errors state with any validation errors\nsetErrors(tempErrors);return isValid;};// Function to validate password based on specific criteria\nconst validatePassword=password=>{// Ensures password is at least 8 characters long\nreturn password.match(/^[\\w!@#$%^&*]{8,}$/);};// Function to handle form submission\nconst handleSubmit=e=>{e.preventDefault();// Prevents the default form submit action\nif(validateForm()){navigate('/profile');// Navigate to profile page upon successful validation\n}};// JSX for rendering the registration form\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Account\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName\",children:\"First Name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"firstName\",id:\"firstName\",placeholder:\"John\",onChange:handleChange,value:formData.firstName,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName\",children:\"Last Name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",id:\"lastName\",placeholder:\"Smith\",onChange:handleChange,value:formData.lastName,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",id:\"email\",placeholder:\"johnsmith@dal.ca\",onChange:handleChange,value:formData.email,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"requirements\",style:{display:showRequirements?'block':'none'},children:\"Password must be at least 8 characters long.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",placeholder:\"Password\",onChange:handleChange,value:formData.password,required:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",id:\"confirmPassword\",placeholder:\"Password\",onChange:handleChange,value:formData.confirmPassword,required:true}),/*#__PURE__*/_jsx(\"br\",{}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:errors.confirmPassword}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Register\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Returning Explorer? \",/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"Login\"})]})]})})});};","map":{"version":3,"names":["React","useState","useNavigate","useContentLoader","jsx","_jsx","jsxs","_jsxs","Register","navigate","formData","setFormData","firstName","lastName","email","password","confirmPassword","errors","setErrors","showRequirements","setShowRequirements","handleChange","e","name","value","target","prevState","validatePassword","validateForm","tempErrors","isValid","match","handleSubmit","preventDefault","className","children","onSubmit","htmlFor","type","id","placeholder","onChange","required","style","display","color","href"],"sources":["/Users/adamsarty/Desktop/tutorial3/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useContentLoader } from '../js/useContentLoader';\n\n/* ------------------------------------------------------\n *  Author: Adam Sarty\n *  Student ID: B00794681\n *  T3 - CSCI4177\n * ------------------------------------------------------\n */\n\nexport const Register = () => {\n    useContentLoader();\n\n    const navigate = useNavigate();\n\n    // State management for form data and validation errors\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    // State to manage validation errors\n    const [errors, setErrors] = useState({});\n    // State to control the visibility of password requirements\n    const [showRequirements, setShowRequirements] = useState(false);\n\n    // Function to handle changes in form inputs\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        // Updating form data state on input change\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n        \n        // Conditionally showing password requirements based on the validation\n        if (name === \"password\") {\n            if (!validatePassword(value)) {\n                setShowRequirements(true);\n            } else {\n                setShowRequirements(false);\n            }\n        }\n    };\n\n    // Function to validate form data\n    const validateForm = () => {\n        let tempErrors = {};\n        let isValid = true;\n\n        // Validate Password\n        if (!validatePassword(formData.password)) {\n            isValid = false; // Mark form as invalid without setting a specific error message\n        }\n\n        // Validate Confirm Password\n        if (formData.confirmPassword !== formData.password) {\n            isValid = false;\n            tempErrors.confirmPassword = \"Passwords do not match.\";\n        }\n\n        // Update the errors state with any validation errors\n        setErrors(tempErrors);\n        return isValid;\n    };\n\n    // Function to validate password based on specific criteria\n    const validatePassword = (password) => {\n        // Ensures password is at least 8 characters long\n        return password.match(/^[\\w!@#$%^&*]{8,}$/);\n    };\n\n    // Function to handle form submission\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Prevents the default form submit action\n        if (validateForm()) {\n            navigate('/profile'); // Navigate to profile page upon successful validation\n        }\n    };\n\n    // JSX for rendering the registration form\n    return (\n        <div className=\"container\">\n            <div className=\"content\">\n                <form onSubmit={handleSubmit}>\n                    <h1>Create Account</h1>\n                    {/* Input fields for registration form with inline validation feedback */}\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <br/>\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"John\" onChange={handleChange} value={formData.firstName} required/>\n                    <br/>\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Smith\" onChange={handleChange} value={formData.lastName} required/>\n                    <br/>\n                    <label htmlFor=\"email\">Email</label>\n                    <br/>\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"johnsmith@dal.ca\" onChange={handleChange} value={formData.email} required/>\n                    <br/>\n                    <label htmlFor=\"password\">Password</label>\n                    <br/>\n                    {/* Dynamically displayed password requirements */}\n                    <div className=\"requirements\" style={{display: showRequirements ? 'block' : 'none'}}>\n                        Password must be at least 8 characters long.\n                    </div>\n                    <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} value={formData.password} required/>\n                    <br/>\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <br/>\n                    <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" placeholder=\"Password\" onChange={handleChange} value={formData.confirmPassword} required/>\n                    <br/>\n                    {/* Error message for confirm password validation */}\n                    {errors.confirmPassword && <div style={{color: 'red'}}>{errors.confirmPassword}</div>}\n                    <input type=\"submit\" value=\"Register\"/>\n                    <p>Returning Explorer? <a href=\"#\">Login</a></p>\n                </form>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}